 double t2 = RxCam*RxCam;
 double t3 = RyCam*RyCam;
 double t4 = RzCam*RzCam;
 double t5 = t2+t3+t4;
 double t6 = sqrt(t5);
 double t7 = RxChess*RxChess;
 double t8 = RyChess*RyChess;
 double t9 = RzChess*RzChess;
 double t10 = t7+t8+t9;
 double t11 = sqrt(t10);
 double t12 = sin(t11);
 double t13 = 1.0/sqrt(t10);
 double t14 = cos(t11);
 double t15 = t14-1.0;
 double t16 = 1.0/t10;
 double t17 = sin(t6);
 double t18 = 1.0/sqrt(t5);
 double t19 = cos(t6);
 double t20 = t19-1.0;
 double t21 = 1.0/t5;
 double t22 = RzChess*t12*t13;
 double t23 = RxChess*RyChess*t15*t16;
 double t24 = RyChess*t12*t13;
 double t25 = RxChess*t12*t13;
 double t26 = RyChess*RzChess*t15*t16;
 double t27 = RxCam*t17*t18;
 double t28 = RxChess*RzChess*t15*t16;
 double t29 = t24+t28;
 double t30 = t25-t26;
 double t31 = Y*t30;
 double t32 = t7+t8;
 double t33 = t15*t16*t32;
 double t34 = t33+1.0;
 double t35 = Z*t34;
 double t61 = X*t29;
 double t36 = t31+t35-t61+tzChess;
 double t37 = t22+t23;
 double t38 = t8+t9;
 double t39 = t15*t16*t38;
 double t40 = t39+1.0;
 double t41 = X*t40;
 double t42 = t22-t23;
 double t43 = X*t42;
 double t44 = t25+t26;
 double t45 = t7+t9;
 double t46 = t15*t16*t45;
 double t47 = t46+1.0;
 double t48 = Y*t47;
 double t57 = Z*t44;
 double t49 = t43+t48-t57+tyChess;
 double t50 = RyCam*t17*t18;
 double t51 = RxCam*RzCam*t20*t21;
 double t52 = t50+t51;
 double t53 = t24-t28;
 double t54 = Z*t53;
 double t63 = Y*t37;
 double t55 = t41+t54-t63+txChess;
 double t56 = RyCam*RzCam*t20*t21;
 double t58 = t2+t3;
 double t59 = t20*t21*t58;
 double t60 = t59+1.0;
 double t62 = t36*t60;
 double t64 = t27-t56;
 double t65 = t49*t64;
 double t68 = t52*t55;
 double t66 = t62+t65-t68+tzCam;
 double t69 = RzCam*t17*t18;
 double t70 = RxCam*RyCam*t20*t21;
 double t71 = 1.0/t66;
 double t67 = fabs(v-t71*(cy*t66+fy*(tyCam-t36*(t27+t56)+t55*(t69-t70)+t49*(t20*t21*(t2+t4)+1.0))));
 double t72 = fabs(u-t71*(cx*t66+fx*(txCam-t49*(t69+t70)+t36*(t50-t51)+t55*(t20*t21*(t3+t4)+1.0))));
 double t0 = sqrt(t67*t67 + t72*t72);
