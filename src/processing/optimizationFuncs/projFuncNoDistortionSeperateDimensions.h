double t2 = RxCam*RxCam;
double t3 = RyCam*RyCam;
double t4 = RzCam*RzCam;
double t5 = t2+t3+t4;
double t6 = sqrt(t5);
double t7 = RxChess*RxChess;
double t8 = RyChess*RyChess;
double t9 = RzChess*RzChess;
double t10 = t7+t8+t9;
double t11 = sqrt(t10);
double t12 = sin(t11);
double t13 = 1.0/sqrt(t10);
double t14 = cos(t11);
double t15 = t14-1.0;
double t16 = 1.0/t10;
double t17 = sin(t6);
double t18 = 1.0/sqrt(t5);
double t19 = cos(t6);
double t20 = t19-1.0;
double t21 = 1.0/t5;
double t22 = RzChess*t12*t13;
double t23 = RxChess*RyChess*t15*t16;
double t24 = RyChess*t12*t13;
double t25 = RxChess*t12*t13;
double t26 = RyChess*RzChess*t15*t16;
double t27 = t22-t23;
double t28 = X*t27;
double t29 = t25+t26;
double t30 = t7+t9;
double t31 = t15*t16*t30;
double t32 = t31+1.0;
double t33 = Y*t32;
double t57 = Z*t29;
double t34 = t28+t33-t57+tyChess;
double t35 = RyCam*t17*t18;
double t36 = RxCam*RzCam*t20*t21;
double t37 = RxChess*RzChess*t15*t16;
double t38 = t24+t37;
double t39 = t25-t26;
double t40 = Y*t39;
double t41 = t7+t8;
double t42 = t15*t16*t41;
double t43 = t42+1.0;
double t44 = Z*t43;
double t62 = X*t38;
double t45 = t40+t44-t62+tzChess;
double t46 = t22+t23;
double t47 = t8+t9;
double t48 = t15*t16*t47;
double t49 = t48+1.0;
double t50 = X*t49;
double t51 = t35+t36;
double t52 = t24-t37;
double t53 = Z*t52;
double t64 = Y*t46;
double t54 = t50+t53-t64+txChess;
double t55 = RxCam*t17*t18;
double t67 = RyCam*RzCam*t20*t21;
double t56 = t55-t67;
double t58 = t34*t56;
double t59 = t2+t3;
double t60 = t20*t21*t59;
double t61 = t60+1.0;
double t63 = t45*t61;
double t66 = t51*t54;
double t65 = t58+t63-t66+tzCam;
double t68 = RzCam*t17*t18;
double t69 = RxCam*RyCam*t20*t21;
double t70 = 1.0/t65;
  A0[0] = u-t70*(cx*t65+fx*(txCam-t34*(t68+t69)+t45*(t35-t36)+t54*(t20*t21*(t3+t4)+1.0)));
  A0[1] = v-t70*(cy*t65+fy*(tyCam-t45*(t55+t67)+t54*(t68-t69)+t34*(t20*t21*(t2+t4)+1.0)));
